# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'Qt_seg.ui'
#
# Created by: PyQt5 UI code generator 5.15.7
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1472, 712)
        MainWindow.setMinimumSize(QtCore.QSize(1472, 712))
        MainWindow.setMaximumSize(QtCore.QSize(1472, 712))
        font = QtGui.QFont()
        font.setFamily("微软雅黑")
        MainWindow.setFont(font)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.centralwidget)
        self.verticalLayout.setObjectName("verticalLayout")
        self.gridLayout = QtWidgets.QGridLayout()
        self.gridLayout.setObjectName("gridLayout")
        self.progressBar = QtWidgets.QProgressBar(self.centralwidget)
        self.progressBar.setProperty("value", 0)
        self.progressBar.setObjectName("progressBar")
        self.gridLayout.addWidget(self.progressBar, 2, 0, 1, 5)
        self.label_2 = QtWidgets.QLabel(self.centralwidget)
        font = QtGui.QFont()
        font.setFamily("微软雅黑")
        self.label_2.setFont(font)
        self.label_2.setTextFormat(QtCore.Qt.PlainText)
        self.label_2.setAlignment(QtCore.Qt.AlignCenter)
        self.label_2.setObjectName("label_2")
        self.gridLayout.addWidget(self.label_2, 4, 0, 1, 2)
        self.label_3 = QtWidgets.QLabel(self.centralwidget)
        font = QtGui.QFont()
        font.setFamily("微软雅黑")
        self.label_3.setFont(font)
        self.label_3.setTextFormat(QtCore.Qt.PlainText)
        self.label_3.setAlignment(QtCore.Qt.AlignCenter)
        self.label_3.setObjectName("label_3")
        self.gridLayout.addWidget(self.label_3, 4, 4, 1, 2)
        self.gpu_combo_box = QtWidgets.QComboBox(self.centralwidget)
        self.gpu_combo_box.setObjectName("gpu_combo_box")
        self.gpu_combo_box.addItem("")
        self.gpu_combo_box.addItem("")
        self.gridLayout.addWidget(self.gpu_combo_box, 1, 1, 1, 2)
        self.label_4 = QtWidgets.QLabel(self.centralwidget)
        font = QtGui.QFont()
        font.setFamily("微软雅黑")
        self.label_4.setFont(font)
        self.label_4.setTextFormat(QtCore.Qt.PlainText)
        self.label_4.setAlignment(QtCore.Qt.AlignCenter)
        self.label_4.setObjectName("label_4")
        self.gridLayout.addWidget(self.label_4, 1, 3, 1, 2)
        self.save_seg_button = QtWidgets.QPushButton(self.centralwidget)
        self.save_seg_button.setEnabled(True)
        font = QtGui.QFont()
        font.setFamily("微软雅黑")
        self.save_seg_button.setFont(font)
        self.save_seg_button.setObjectName("save_seg_button")
        self.gridLayout.addWidget(self.save_seg_button, 3, 5, 1, 1)
        self.show_layers = QtWidgets.QLabel(self.centralwidget)
        self.show_layers.setMinimumSize(QtCore.QSize(640, 480))
        self.show_layers.setMaximumSize(QtCore.QSize(640, 480))
        self.show_layers.setText("")
        self.show_layers.setObjectName("show_layers")
        self.gridLayout.addWidget(self.show_layers, 5, 4, 1, 2)
        self.lineEdit = QtWidgets.QLineEdit(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(10)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.lineEdit.sizePolicy().hasHeightForWidth())
        self.lineEdit.setSizePolicy(sizePolicy)
        self.lineEdit.setObjectName("lineEdit")
        self.gridLayout.addWidget(self.lineEdit, 0, 1, 1, 4)
        self.label_5 = QtWidgets.QLabel(self.centralwidget)
        font = QtGui.QFont()
        font.setFamily("微软雅黑")
        self.label_5.setFont(font)
        self.label_5.setTextFormat(QtCore.Qt.PlainText)
        self.label_5.setAlignment(QtCore.Qt.AlignCenter)
        self.label_5.setObjectName("label_5")
        self.gridLayout.addWidget(self.label_5, 4, 2, 1, 2)
        self.model_combo_box = QtWidgets.QComboBox(self.centralwidget)
        self.model_combo_box.setToolTip("")
        self.model_combo_box.setObjectName("model_combo_box")
        self.model_combo_box.addItem("")
        self.model_combo_box.addItem("")
        self.model_combo_box.addItem("")
        self.gridLayout.addWidget(self.model_combo_box, 1, 5, 1, 1)
        self.output_empty_button = QtWidgets.QPushButton(self.centralwidget)
        self.output_empty_button.setObjectName("output_empty_button")
        self.gridLayout.addWidget(self.output_empty_button, 3, 0, 1, 1)
        self.open_pic_combo_box = QtWidgets.QComboBox(self.centralwidget)
        self.open_pic_combo_box.setObjectName("open_pic_combo_box")
        self.open_pic_combo_box.addItem("")
        self.open_pic_combo_box.addItem("")
        self.open_pic_combo_box.addItem("")
        self.gridLayout.addWidget(self.open_pic_combo_box, 0, 0, 1, 1)
        self.label = QtWidgets.QLabel(self.centralwidget)
        font = QtGui.QFont()
        font.setFamily("微软雅黑")
        self.label.setFont(font)
        self.label.setTextFormat(QtCore.Qt.PlainText)
        self.label.setAlignment(QtCore.Qt.AlignCenter)
        self.label.setObjectName("label")
        self.gridLayout.addWidget(self.label, 1, 0, 1, 1)
        self.seg_confirm_button = QtWidgets.QPushButton(self.centralwidget)
        font = QtGui.QFont()
        font.setFamily("微软雅黑")
        self.seg_confirm_button.setFont(font)
        self.seg_confirm_button.setObjectName("seg_confirm_button")
        self.gridLayout.addWidget(self.seg_confirm_button, 2, 5, 1, 1)
        self.listView = QtWidgets.QListView(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(10)
        sizePolicy.setVerticalStretch(30)
        sizePolicy.setHeightForWidth(self.listView.sizePolicy().hasHeightForWidth())
        self.listView.setSizePolicy(sizePolicy)
        self.listView.setObjectName("listView")
        self.gridLayout.addWidget(self.listView, 5, 0, 1, 2)
        self.browser_button = QtWidgets.QPushButton(self.centralwidget)
        font = QtGui.QFont()
        font.setFamily("微软雅黑")
        self.browser_button.setFont(font)
        self.browser_button.setObjectName("browser_button")
        self.gridLayout.addWidget(self.browser_button, 0, 5, 1, 1)
        self.rgb_layers = QtWidgets.QLabel(self.centralwidget)
        self.rgb_layers.setMinimumSize(QtCore.QSize(640, 480))
        self.rgb_layers.setMaximumSize(QtCore.QSize(640, 480))
        self.rgb_layers.setText("")
        self.rgb_layers.setObjectName("rgb_layers")
        self.gridLayout.addWidget(self.rgb_layers, 5, 2, 1, 2)
        self.verticalLayout.addLayout(self.gridLayout)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1472, 23))
        self.menubar.setObjectName("menubar")
        self.menu = QtWidgets.QMenu(self.menubar)
        self.menu.setObjectName("menu")
        self.menu_2 = QtWidgets.QMenu(self.menubar)
        self.menu_2.setObjectName("menu_2")
        self.menu_3 = QtWidgets.QMenu(self.menubar)
        self.menu_3.setObjectName("menu_3")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.open_pic = QtWidgets.QAction(MainWindow)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap(":/dark/sizegrip.svg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.open_pic.setIcon(icon)
        self.open_pic.setObjectName("open_pic")
        self.save_seg = QtWidgets.QAction(MainWindow)
        icon1 = QtGui.QIcon()
        icon1.addPixmap(QtGui.QPixmap(":/light/undock-hover.svg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.save_seg.setIcon(icon1)
        self.save_seg.setObjectName("save_seg")
        self.exit = QtWidgets.QAction(MainWindow)
        icon2 = QtGui.QIcon()
        icon2.addPixmap(QtGui.QPixmap(":/dark/close-pressed.svg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.exit.setIcon(icon2)
        self.exit.setObjectName("exit")
        self.action_dark = QtWidgets.QAction(MainWindow)
        self.action_dark.setObjectName("action_dark")
        self.action_light = QtWidgets.QAction(MainWindow)
        self.action_light.setObjectName("action_light")
        self.author = QtWidgets.QAction(MainWindow)
        self.author.setObjectName("author")
        self.open_pic_folder = QtWidgets.QAction(MainWindow)
        icon3 = QtGui.QIcon()
        icon3.addPixmap(QtGui.QPixmap(":/dark/vmovetoolbar.svg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.open_pic_folder.setIcon(icon3)
        self.open_pic_folder.setObjectName("open_pic_folder")
        self.open_cam = QtWidgets.QAction(MainWindow)
        self.open_cam.setObjectName("open_cam")
        self.menu.addAction(self.open_pic)
        self.menu.addAction(self.open_pic_folder)
        self.menu.addAction(self.open_cam)
        self.menu.addSeparator()
        self.menu.addAction(self.save_seg)
        self.menu.addSeparator()
        self.menu.addAction(self.exit)
        self.menu_2.addAction(self.action_dark)
        self.menu_2.addAction(self.action_light)
        self.menu_3.addAction(self.author)
        self.menubar.addAction(self.menu.menuAction())
        self.menubar.addAction(self.menu_2.menuAction())
        self.menubar.addAction(self.menu_3.menuAction())

        self.retranslateUi(MainWindow)
        self.model_combo_box.setCurrentIndex(0)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "自动语义分割"))
        self.label_2.setText(_translate("MainWindow", "文件列表"))
        self.label_3.setText(_translate("MainWindow", "分割效果预览"))
        self.gpu_combo_box.setToolTip(_translate("MainWindow", "CPU处理一幅图像较慢，视硬件不同大概需要20秒到1分钟，请耐心等待；\n"
"使用GPU需安装CUDA环境否则仍然会用CPU进行处理，且显存小于8GB的显卡在处理某些图像时可能会爆显存而输出错误的分割结果，这种情况下请尝试使用CPU处理该图片"))
        self.gpu_combo_box.setItemText(0, _translate("MainWindow", "CPU"))
        self.gpu_combo_box.setItemText(1, _translate("MainWindow", "GPU"))
        self.label_4.setText(_translate("MainWindow", "语义分割模型"))
        self.save_seg_button.setText(_translate("MainWindow", "保存分割结果"))
        self.label_5.setText(_translate("MainWindow", "RGB图片"))
        self.model_combo_box.setItemText(0, _translate("MainWindow", "BiseNet"))
        self.model_combo_box.setItemText(1, _translate("MainWindow", "SINet"))
        self.model_combo_box.setItemText(2, _translate("MainWindow", "FastDVFN"))
        self.output_empty_button.setText(_translate("MainWindow", "清空"))
        self.open_pic_combo_box.setItemText(0, _translate("MainWindow", "打开图片"))
        self.open_pic_combo_box.setItemText(1, _translate("MainWindow", "打开图片文件夹"))
        self.open_pic_combo_box.setItemText(2, _translate("MainWindow", "打开摄像头"))
        self.label.setText(_translate("MainWindow", "是否使用GPU\n"
"（需安装CUDA）"))
        self.seg_confirm_button.setText(_translate("MainWindow", "进行分割"))
        self.browser_button.setText(_translate("MainWindow", "浏览"))
        self.menu.setTitle(_translate("MainWindow", "菜单"))
        self.menu_2.setTitle(_translate("MainWindow", "主题"))
        self.menu_3.setTitle(_translate("MainWindow", "关于"))
        self.open_pic.setText(_translate("MainWindow", "打开图片"))
        self.save_seg.setText(_translate("MainWindow", "保存分割结果"))
        self.exit.setText(_translate("MainWindow", "退出"))
        self.action_dark.setText(_translate("MainWindow", "dark"))
        self.action_light.setText(_translate("MainWindow", "light"))
        self.author.setText(_translate("MainWindow", "作者信息"))
        self.open_pic_folder.setText(_translate("MainWindow", "打开图片文件夹"))
        self.open_cam.setText(_translate("MainWindow", "打开摄像头"))
        self.open_cam.setIconText(_translate("MainWindow", "打开摄像头"))
